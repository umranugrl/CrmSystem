// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using crmSystem.Persistence.Contexts;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(CrmDbContext))]
    [Migration("20240712072012_AddSeedData")]
    partial class AddSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("crmSystem.Domain.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Main St",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "john.doe@example.com",
                            Name = "John Doe",
                            Phone = "1234567890"
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Oak Ave",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jane.smith@example.com",
                            Name = "Jane Smith",
                            Phone = "0987654321"
                        },
                        new
                        {
                            Id = 3,
                            Address = "789 Pine Rd",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "alice.johnson@example.com",
                            Name = "Alice Johnson",
                            Phone = "1111111111"
                        },
                        new
                        {
                            Id = 4,
                            Address = "321 Elm St",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "bob.brown@example.com",
                            Name = "Bob Brown",
                            Phone = "2222222222"
                        },
                        new
                        {
                            Id = 5,
                            Address = "654 Maple Dr",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "charlie.green@example.com",
                            Name = "Charlie Green",
                            Phone = "3333333333"
                        });
                });

            modelBuilder.Entity("crmSystem.Domain.Entities.Interaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InteractionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Interactions", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            Date = new DateTime(2024, 7, 2, 10, 20, 10, 108, DateTimeKind.Local).AddTicks(5072),
                            Details = "Initial contact",
                            InteractionType = "Email"
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 2,
                            Date = new DateTime(2024, 7, 7, 10, 20, 10, 108, DateTimeKind.Local).AddTicks(5122),
                            Details = "Follow-up call",
                            InteractionType = "Phone"
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 3,
                            Date = new DateTime(2024, 7, 9, 10, 20, 10, 108, DateTimeKind.Local).AddTicks(5130),
                            Details = "Product demo",
                            InteractionType = "Meeting"
                        },
                        new
                        {
                            Id = 4,
                            CustomerId = 4,
                            Date = new DateTime(2024, 7, 5, 10, 20, 10, 108, DateTimeKind.Local).AddTicks(5139),
                            Details = "Price negotiation",
                            InteractionType = "Email"
                        },
                        new
                        {
                            Id = 5,
                            CustomerId = 5,
                            Date = new DateTime(2024, 7, 10, 10, 20, 10, 108, DateTimeKind.Local).AddTicks(5146),
                            Details = "Contract discussion",
                            InteractionType = "Phone"
                        });
                });

            modelBuilder.Entity("crmSystem.Domain.Entities.Opportunity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("EstimatedValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("OpportunityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Opportunities", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            Description = "New software project",
                            EstimatedValue = 10000m,
                            OpportunityName = "New Project",
                            Status = "Open"
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 2,
                            Description = "Consulting services for business",
                            EstimatedValue = 5000m,
                            OpportunityName = "Consulting Service",
                            Status = "Closed"
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 3,
                            Description = "Selling software product",
                            EstimatedValue = 15000m,
                            OpportunityName = "Product Sale",
                            Status = "Open"
                        },
                        new
                        {
                            Id = 4,
                            CustomerId = 4,
                            Description = "Annual maintenance contract",
                            EstimatedValue = 7000m,
                            OpportunityName = "Maintenance Contract",
                            Status = "Open"
                        },
                        new
                        {
                            Id = 5,
                            CustomerId = 5,
                            Description = "Custom software development",
                            EstimatedValue = 20000m,
                            OpportunityName = "Software Development",
                            Status = "Closed"
                        });
                });

            modelBuilder.Entity("crmSystem.Domain.Entities.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Requests", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            Details = "Technical support needed",
                            RequestType = "Support",
                            Status = "Open"
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 2,
                            Details = "Product inquiry",
                            RequestType = "Inquiry",
                            Status = "Closed"
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 3,
                            Details = "Service not satisfactory",
                            RequestType = "Complaint",
                            Status = "Open"
                        },
                        new
                        {
                            Id = 4,
                            CustomerId = 4,
                            Details = "Positive feedback on service",
                            RequestType = "Feedback",
                            Status = "Closed"
                        },
                        new
                        {
                            Id = 5,
                            CustomerId = 5,
                            Details = "Need proposal for new project",
                            RequestType = "Request for Proposal",
                            Status = "Open"
                        });
                });

            modelBuilder.Entity("crmSystem.Domain.Entities.Interaction", b =>
                {
                    b.HasOne("crmSystem.Domain.Entities.Customer", "Customer")
                        .WithMany("Interactions")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("crmSystem.Domain.Entities.Opportunity", b =>
                {
                    b.HasOne("crmSystem.Domain.Entities.Customer", "Customer")
                        .WithMany("Opportunities")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("crmSystem.Domain.Entities.Request", b =>
                {
                    b.HasOne("crmSystem.Domain.Entities.Customer", "Customer")
                        .WithMany("Requests")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("crmSystem.Domain.Entities.Customer", b =>
                {
                    b.Navigation("Interactions");

                    b.Navigation("Opportunities");

                    b.Navigation("Requests");
                });
#pragma warning restore 612, 618
        }
    }
}
